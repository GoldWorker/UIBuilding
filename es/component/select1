import React, { Component, ChangeEvent, useState } from 'react';

declare module 'react' {
    interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {
        // extends React's HTMLAttributes
        scrollbar?: string;
    }
}

interface SelectOption {
    label: string,
    value: any
}

interface SelectProps {
    option: SelectOption[],
    onChange: (selectedValue: string) => void
    labelName?: string,
    placeholder?: string,
    width?: string,
    value?: string | number,
    defaultValue?: string | number,
}

interface SelectState {
    selectedValue: string,
    selectedLabel: string | number,
    option: SelectOption[]
}

const Select1 = (props: SelectProps) => {
    // const id = Math.random().toString(36).substring(2);
    // const [selectedValue, setSelectValue] = useState('');
    // const [selectedLabel, setSelectLabel] = useState(props.value || props.defaultValue);

    // const handleClickSelected = (label: string, value: any): void => {
    //     setSelectValue(label);
    //     setSelectLabel(value);
    //     props.onChange && props.onChange(selectedValue);
    // };

    return (
        <div className="select-down-modern">
            {/* {
                props.labelName ? <label htmlFor={id} className="pb4 mb0 fs12 d-b">{props.labelName}</label> : null
            }
            <input
                id={id}
                type="text"
                className="input-normal"
                style={{ width: props.width || 384 + 'px' }}
                placeholder={props.placeholder || ''}
                value={selectedLabel} />
            <div className="select-down-icon d-f jc fd-c">
                <div className="tri-down"></div>
            </div>
            <ul className="select-option paper" scrollbar='normal'>
                {
                    props.option ? props.option.map((item, index) => {
                        return <li onMouseDown={() => handleClickSelected(item.label, item.value)} key={index}>{item.label}</li>;
                    }) : null
                }
            </ul> */}
            123
        </div>
    );
};

export default class Select extends Component{
    render(){
        return 123;
    }
}

// export default class Select extends Component<SelectProps, SelectState>{
//     private id: string
//     constructor(props: SelectProps) {
//         super(props);
//         this.state = {
//             selectedValue: '',
//             selectedLabel: this.props.value || this.props.defaultValue || '',
//             option: this.props.option || []
//         };
//         this.id = Math.random().toString(36).substring(2);
//     }
//     handleClickSelected(label: string, value: any): void {
//         this.setState({
//             selectedLabel: label,
//             selectedValue: value
//         }, () => {
//             this.props.onChange && this.props.onChange(this.state.selectedValue);
//         });
//     }

//     componentWillReceiveProps(nextProps) {
//         if (nextProps.value != undefined) {
//             this.setState({
//                 selectedLabel: nextProps.value
//             });
//         }
//     }

//     render() {
//         return (
//             <div className="select-down-modern">
//                 {
//                     this.props.labelName ? <label htmlFor={this.id} className="pb4 mb0 fs12 d-b">{this.props.labelName}</label> : null
//                 }
//                 <input
//                     id={this.id}
//                     type="text"
//                     className="input-normal"
//                     style={{ width: this.props.width || 384 + 'px' }}
//                     placeholder={this.props.placeholder || ''}
//                     // onChange={() => { }}
//                     value={this.state.selectedLabel} />
//                 <div className="select-down-icon d-f jc fd-c">
//                     {/* <div className="tri-top mb2"></div> */}
//                     <div className="tri-down"></div>
//                 </div>
//                 <ul className="select-option paper" scrollbar='normal'>
//                     {
//                         this.props.option ? this.props.option.map((item, index) => {
//                             return <li onMouseDown={() => this.handleClickSelected(item.label, item.value)} key={index}>{item.label}</li>;
//                         }) : null
//                     }
//                 </ul>
//             </div>
//         );
//     }
// }
